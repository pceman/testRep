{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
			"type": "string",
			"metadata": {
				"description": "Location for the VM, only certain regions support zones during preview."
			}
        },
        "namePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 8,
            "metadata": {
                "description": "Naming prefix for each new resource created. 3-char min, 8-char max, lowercase alphanumeric"
            }
        },
        "domainName": {
            "type": "string",
            "metadata": {
                "description": "DNS domain name for existing Active Directory domain"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Name of the Administrator of the existing Active Directory Domain"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "minLength": 12,
            "metadata": {
                "description": "Password for the Administrator account of the existing Active Directory Domain"
            }
        },
        "sqlServiceAccount": {
            "type": "string",
            "metadata": {
                "description": "Name of the user account to be used for the SQL Server service account"
            }
        },
        "sqlServicePassword": {
            "type": "securestring",
            "minLength": 12,
            "metadata": {
                "description": "Password to be used for the SQL Server service account"
            }
        },
        "nicVnetUri": {
            "type": "string",
            "metadata": {
                "description": "Resource ID for existing vnet/subnet to which VM NICs should be attached"
            }
        },
        "existingSubnetNames": {
            "type": "array",
            "metadata": {
                "description": "Name of the existing subnets in the existing VNET to which the SQL Server VMs should be deployed"
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Size of the SQL Server VMs to be created"
            }
        },
        "vmCount": {
            "type": "int",
            "minValue": 2,
            "maxValue": 9,
            "metadata": {
                "description": "Number of SQL Server VMs to be created in AlwaysOn Availability Group cluster (Min=2, Max=9)"
            },
            "defaultValue": 2
        },
        "vmDiskSize": {
            "type": "int",
            "minValue": 128,
            "maxValue": 1023,
            "metadata": {
                "description": "Size of each data disk in GB on each SQL Server VM (Min=128, Max=1023)"
            }
        },
        "vmDiskCount": {
            "type": "int",
            "minValue": 2,
            "maxValue": 32,
            "metadata": {
                "description": "Number of data disks on each SQL Server VM (Min=2, Max=32). Ensure that the VM size you've selected will support this number of data disks."
            }
        },
        "workloadType": {
            "type": "string",
            "defaultValue": "GENERAL"
        },
        "imagePublisher": {
            "type": "string",
            "defaultValue": "MicrosoftSQLServer"
        },
        "imageOffer": {
            "type": "string",
            "defaultValue": "SQL2016SP1-WS2016"
        },
        "imageSKU": {
            "type": "string",
            "defaultValue": "Enterprise"
        },
        "imageVersion": {
            "type": "string",
            "defaultValue": "latest"
        },
        "_artifactsLocation": {
            "type": "string"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring"
        }
    },
    "variables": {
        "apiVersionStorage": "2016-01-01",
        "witnessStorageName": "[concat(parameters('namePrefix'),uniqueString(resourceGroup().id),'cw')]",
        "witnessStorageType": "Standard_LRS",
        "vmNamePrefix": "[concat(parameters('namePrefix'),'-sql-')]",
        "clusterName": "[concat(variables('vmNamePrefix'),'c')]",
        "vmLoopTemplateURL": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/newVM.json',parameters('_artifactsLocationSasToken'))]",
        "ipLoopTemplateURL": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/getIpAddress.json',parameters('_artifactsLocationSasToken'))]",
        "sqlPrepModulesURL": "[concat(parameters('_artifactsLocation'),'/dsc/prep-sqlao.ps1.zip',parameters('_artifactsLocationSasToken'))]",
        "sqlPrepFunction": "PrepSQLAO.ps1\\PrepSQLAO",
        "sqlConfigModulesURL": "[concat(parameters('_artifactsLocation'),'/dsc/config-sqlao.ps1.zip',parameters('_artifactsLocationSasToken'))]",
        "sqlConfigFunction": "ConfigSQLAO.ps1\\ConfigSQLAO",
        "agName": "[concat(variables('vmNamePrefix'),'ag')]",
        "agListenerName": "[concat(variables('vmNamePrefix'),'agl')]",
        "agEpName": "[concat(variables('vmNamePrefix'),'ha')]",
        "zones": ["1","2","3"]
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('witnessStorageName')]",
            "apiVersion": "2016-01-01",
			"location": "[parameters('location')]",
            "sku": {
                "name": "[variables('witnessStorageType')]"
            },
            "kind": "Storage"
        },
        {
            "name": "[concat(variables('vmNamePrefix'), copyindex(), '-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
			"location": "[parameters('location')]",
            "apiVersion": "2017-08-01",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('vmCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[concat(parameters('nicVnetUri'),'/subnets/',parameters('existingSubnetNames')[mod(copyIndex(),length(variables('zones')))])]"
                            },
                            "primary": true
                        }
                    },
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[concat(parameters('nicVnetUri'),'/subnets/',parameters('existingSubnetNames')[mod(copyIndex(),length(variables('zones')))])]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig3",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[concat(parameters('nicVnetUri'),'/subnets/',parameters('existingSubnetNames')[mod(copyIndex(),length(variables('zones')))])]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "name": "[concat(variables('vmNamePrefix'),'0-clusterIp')]",
            "dependsOn": [
                "nicLoop"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('ipLoopTemplateURL')]"
                },
                "parameters": {
                    "ipConfig": {
                        "value": "[reference(concat(variables('vmNamePrefix'), '0-nic')).ipConfigurations[1].properties.privateIPAddress]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "copy": {
                "name": "clusterIpLoop",
                "count": "[sub(parameters('vmCount'),1)]"
            },
            "name": "[concat(variables('vmNamePrefix'),copyIndex(1),'-clusterIp')]",
            "dependsOn": [
                "nicLoop",
                "[concat(variables('vmNamePrefix'),'0-clusterIp')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('ipLoopTemplateURL')]"
                },
                "parameters": {
                    "ipConfig": {
                        "value": "[reference(concat(variables('vmNamePrefix'), copyIndex(1), '-nic')).ipConfigurations[1].properties.privateIPAddress]"
                    },
                    "ipAddresses": {
                        "value": "[reference(concat(variables('vmNamePrefix'),copyIndex(),'-clusterIp')).outputs.result.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "name": "[concat(variables('vmNamePrefix'),'0-agListenerIp')]",
            "dependsOn": [
                "nicLoop"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('ipLoopTemplateURL')]"
                },
                "parameters": {
                    "ipConfig": {
                        "value": "[reference(concat(variables('vmNamePrefix'), '0-nic')).ipConfigurations[2].properties.privateIPAddress]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "copy": {
                "name": "agListenerIpLoop",
                "count": "[sub(parameters('vmCount'),1)]"
            },
            "name": "[concat(variables('vmNamePrefix'),copyIndex(1),'-agListenerIp')]",
            "dependsOn": [
                "nicLoop",
                "[concat(variables('vmNamePrefix'),'0-agListenerIp')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('ipLoopTemplateURL')]"
                },
                "parameters": {
                    "ipConfig": {
                        "value": "[reference(concat(variables('vmNamePrefix'), copyIndex(1), '-nic')).ipConfigurations[2].properties.privateIPAddress]"
                    },
                    "ipAddresses": {
                        "value": "[reference(concat(variables('vmNamePrefix'),copyIndex(),'-agListenerIp')).outputs.result.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "name": "[concat(variables('vmNamePrefix'), 0)]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "nicLoop"
            ],
            "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[concat(variables('vmNamePrefix'), 0)]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher')]",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('imageSku')]",
                        "version": "[parameters('imageVersion')]"
                    },
                    "osDisk": {
                        "name": "[concat(variables('vmNamePrefix'), 0, '-osdisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 128,
                            "lun": 0,
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        },
                        {
                            "diskSizeGB": 128,
                            "lun": 1,
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            }                            
                        },
                        {
                            "diskSizeGB": 128,
                            "lun": 2,
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }                            
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNamePrefix'),'0-nic'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "name": "[concat(variables('vmNamePrefix'), 1)]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "nicLoop"
            ],
            "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[concat(variables('vmNamePrefix'), 1)]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher')]",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('imageSku')]",
                        "version": "[parameters('imageVersion')]"
                    },
                    "osDisk": {
                        "name": "[concat(variables('vmNamePrefix'), 1, '-osdisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 128,
                            "lun": 0,
                            "createOption": "Empty"
                        },
                        {
                            "diskSizeGB": 128,
                            "lun": 1,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNamePrefix'),'1-nic'))]"
                        }
                    ]
                }
            }
        }



    ],
    "outputs": {
        "agListenerName": {
            "type": "string",
            "value": "[variables('agListenerName')]"
        }
    }
}